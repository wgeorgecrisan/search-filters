{"version":3,"sources":["SearchFilter.react.js","serviceWorker.js","index.js"],"names":["filtersStateFromJson","content","validfilters","SearchFilterParent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","removeFilter","event","preventDefault","key","currentTarget","value","collection","state","selectedFiltersCollection","splice","setState","handleButtonClick","nr","target","alphgroup","selectedCollection","totalCollections","updateParentSelectedFiltersCollection","data","parent","keyme","multiple","dataToUpdate","_","map","element","label","type","selectedOperator","selectedValue","getdatafromchild","globalfilters","alphrange","totalGroups","selectedFilter","optionsForOperator","bind","assertThisInitialized","optionsForFilter1","handleFilterChange1","prevProps","selectedObject","options","keys","length","each","operators","operator","push","list","filtername","description","selectedOption","date","Date","moment","format","optionsFilter","filterContainerArray","propsFilterContainerArrayElements","handleChangeOperator","getFilterValue","i","react_default","a","createElement","SearchFilter_react_FilterContainerElement","assign","Fragment","className","react_select_esm","isSearchable","isDisabled","isClearable","placeholder","onChange","String","category","toUpperCase","Component","FilterContainerElement","_this2","handleChangeValueFromTo","attributes","position","from","to","handleChangeStart","dateState","handleChangeStartDT","handleChangeEnd","handleChangeEndDT","handleChangeFilter","filter","handleChangeValue","handleChangeValueCheckbox","checked","handleChangeValueDate","handleChangeValueDateDT","defaultValue","currentFilterState","currentOperator","selectValueDT","toDate","es","selected","selectsStart","showTimeSelect","dateFormat","re","selectsEnd","startDate","endDate","selectValue","Form","Check","Control","optionsOperator","prevState","Button","variant","size","onClick","SearchFilters","_this3","search","theExpectedString","dataforqs","collectionSelectedFilters","elm","selectedFiltersQueryString","loadAllFilters","allFiltersByCategory","localfiltersarray","localfilters","loadedCategories","categorySelected","SearchFilter_react_SearchFilterParent","Boolean","window","location","hostname","match","ReactDOM","render","SearchFilter_react","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.39e84446.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.sass';\nimport content from './contentfromv2.json';\nimport _ from 'underscore';\nimport Select from 'react-select';\nimport { Button , Form} from 'react-bootstrap';\nimport moment from 'moment';\nimport DatePicker from 'react-datepicker';\nimport PropTypes from 'prop-types'; \nimport \"react-datepicker/dist/react-datepicker.css\";\n\nvar filtersStateFromJson = content.validfilters;\n\nclass SearchFilterParent extends Component {\n   constructor(props){\n      super(props);\n      this.state = {\n        globalfilters: this.props.globalfilters,\n        alphgroup: 0,\n        alphrange: 0,\n        totalCollections: [],\n        totalGroups: [],\n        selectedCollection: [],\n        selectedFilter: '',\n        selectedFiltersCollection: []\n      }\n\n      this.optionsForOperator = this.optionsForOperator.bind(this);\n      this.optionsForFilter1 = this.optionsForFilter1.bind(this);\n      this.handleFilterChange1 = this.handleFilterChange1.bind(this);\n   }\n\n\n   componentDidUpdate(prevProps){\n       if(prevProps.globalfilters !== this.props.globalfilters){\n          this.setState({globalfilters: this.props.globalfilters});\n       }\n   }\n\n\n   optionsForOperator(selectedObject) {\n      let options = [];\n\n      if(selectedObject !== null && Object.keys(selectedObject || {}).length > 0){\n        _.each(selectedObject.value.options.operators,(operator, key)=>{\n          var label = 'Equals';\n\n          switch (operator) {\n            case '>':\n              label = 'Greater than or equals';\n              break;\n            case '<':\n              label = 'Less than or equals';\n              break;\n            case '|':\n              label = 'In';\n              break;\n            case '~':\n              label = 'Contains';\n              break;\n            case '^':\n              label = 'And(Ignore this operator)';\n              break;  \n            case '*':\n              label = 'Starts with';\n              break;\n            case '/':\n              label = 'Between';\n              break;\n            case '!=':\n              label = 'Does not equal'\n              break;\n            default:\n              label = 'Equals'\n            }\n          options.push({ value: operator  , label: label });\n       });\n      }\n     \n      return options;\n   }\n\n   optionsForFilter1(list) {\n    let options = [];\n\n    if(list){\n      _.each(list,(element, key)=>{\n        options.push({ value: element  , label: element.filtername + ' - ' + element.options.description });\n     });\n    }\n     \n    return options;\n   }\n\n   removeFilter = (event)=> {\n     event.preventDefault();\n     let key = event.currentTarget.value;\n     var collection = this.state.selectedFiltersCollection;\n\n      collection.splice(key,1);\n      this.setState({selectedFiltersCollection: collection});\n    \n   }\n\n   handleFilterChange1(selectedOption) {\n      var selectedFiltersCollection = this.state.selectedFiltersCollection;\n\n      if(selectedOption !== null){\n        selectedOption.selectedOperator = '';\n        selectedOption.selectedValue = '';\n        if(selectedOption.value.options.type === 'date') {\n          var date = new Date();\n          selectedOption.selectedValue = moment(date).format('YYYY-MM-DD');\n        } else if( selectedOption.value.options.type === 'boolean') {\n          selectedOption.selectedValue = false;\n        } else if( selectedOption.value.options.type === 'number') {\n          selectedOption.selectedValue = 0;\n        } else if (selectedOption.value.options.type === 'datetime'){\n          selectedOption.selectedValue = moment().format('YYYY-MM-DD HH-mm-ss');\n        }\n\n        selectedFiltersCollection.push(selectedOption);\n        this.setState({selectedFilter: {} , selectedFiltersCollection: selectedFiltersCollection});\n      }\n        \n      else \n        this.setState({selectedFilter: {}});  \n   }\n\n\n   handleButtonClick = (event)=> {\n      var nr = event.target.value;\n    this.setState({ alphgroup: nr , selectedCollection: this.state.totalCollections[nr - 1]});\n   }\n\n   updateParentSelectedFiltersCollection = (data, parent, keyme, multiple)=>{\n     var dataToUpdate = this.state.selectedFiltersCollection;\n    _.map(dataToUpdate, (element,key)=>{\n          if(key === keyme && element.label === parent.label) {\n            if(data.type === 'operator'){\n              element.selectedOperator = data.value;\n            } else if (data.type === 'entity') {\n              element.label = data.value.label;\n              element.value = data.value.value;\n              element.selectedOperator = data.selectedOperator;\n            } else if (data.type === 'filtervalue'){\n                element.selectedValue = data.value;\n            }\n          }\n    });\n    \n    this.props.getdatafromchild(dataToUpdate);\n    this.setState({selectedFiltersCollection: dataToUpdate});\n   }\n\n   render () {\n      let optionsFilter = this.optionsForFilter1(this.state.globalfilters);\n      var filterContainerArray = [];\n        \n        if(this.state.selectedFiltersCollection.length > 0){\n          var propsFilterContainerArrayElements = {\n            alphgroup: this.state.alphgroup,\n            updateParentSelectedFiltersCollection: this.updateParentSelectedFiltersCollection,\n            optionsForOperator: this.optionsForOperator,\n            optionsFilter: optionsFilter,\n            selectedFilter: this.state.selectedFilter,\n            handleChangeOperator: this.handleChangeOperator,\n            handleFilterChange1: this.handleFilterChange1,\n            getFilterValue: this.getFilterValue,\n            removeFilter: this.removeFilter\n          }\n\n          _.each(this.state.selectedFiltersCollection,(element,i)=>{\n              propsFilterContainerArrayElements.selectedFilter = element;\n              filterContainerArray.push(<FilterContainerElement key={element.value.filtername +  i} keyme={i} {...propsFilterContainerArrayElements} />);\n          });\n        } \n          \n\n       return (\n        <React.Fragment>\n          {filterContainerArray}  \n          <div className='selectcontainer-initial'>\n             <div className='new-filter'> Add new filter</div>\n            <Select className='beautify'\n              isSearchable isDisabled={false } isClearable\n              placeholder='Type to search ... '\n              value={Object.keys(this.state.selectedFilter).length > 0 ? this.state.selectedFilter : ''}\n              onChange={this.handleFilterChange1}\n              options={optionsFilter}\n            />\n            <div className='infos'>\n              <span> {this.state.globalfilters ? this.state.globalfilters.length : null} Filters for category: <span> {String(this.props.category).toUpperCase() }</span> </span>\n            </div>\n          </div>\n\n        </React.Fragment>\n        );\n   }\n}\n\nclass FilterContainerElement extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedOperator: this.props.selectedFilter.selectedOperator,\n      selectedFilter: this.props.selectedFilter,\n      selectedValue: this.props.selectedFilter.selectedValue,\n      optionsOperator: [],\n    }\n\n  }\n \n  handleChangeValueFromTo = (event) => {\n      \n    let type = this.state.selectedFilter.value.options.type;\n\n      if( type === 'number' || type === 'string') {\n        if(event.currentTarget.attributes.position.value === 'first'){\n\n           this.setState({selectedValue: { from: event.currentTarget.value , to: this.state.selectedValue.to || '' }},()=>{\n            this.props.updateParentSelectedFiltersCollection({value: this.state.selectedValue, type: \"filtervalue\"}, this.state.selectedFilter, this.props.keyme, true);\n           });\n\n        } else if (event.currentTarget.attributes.position.value === 'second') {\n\n          this.setState({selectedValue: {  to: event.currentTarget.value , from: this.state.selectedValue.from || '' }},()=>{\n            this.props.updateParentSelectedFiltersCollection({value: this.state.selectedValue, type: \"filtervalue\"}, this.state.selectedFilter, this.props.keyme, true);\n          });\n\n        }\n      } \n  }\n\n  handleChangeStart = (date) => {\n      var dateState = this.state.selectedValue;\n\n      if(typeof dateState !== 'object') {\n        dateState = {from: new Date() , to: moment().format('YYYY-MM-DD')};\n      }\n\n      dateState.from = moment(date).format('YYYY-MM-DD');\n\n      this.setState({selectedValue: dateState},()=>{\n        this.props.updateParentSelectedFiltersCollection({value: this.state.selectedValue, type: \"filtervalue\"}, this.state.selectedFilter, this.props.keyme, true);\n      });\n  }\n\n  handleChangeStartDT = (date) => {\n    var dateState = this.state.selectedValue;\n\n    if(typeof dateState !== 'object') {\n      dateState = {from: new Date() , to: moment().format('YYYY-MM-DD hh-mm-ss')};\n    }\n\n    dateState.from = moment(date).format('YYYY-MM-DD hh-mm-ss');\n\n    this.setState({selectedValue: dateState},()=>{\n      this.props.updateParentSelectedFiltersCollection({value: this.state.selectedValue, type: \"filtervalue\"}, this.state.selectedFilter, this.props.keyme, true);\n    });\n}\n\n  handleChangeEnd = (date) => {\n    var dateState = this.state.selectedValue;\n\n    if(typeof dateState !== 'object') {\n      dateState = {from: moment().format('YYYY-MM-DD') , to: new Date()};\n    }\n\n    dateState.to = moment(date).format('YYYY-MM-DD');\n\n    this.setState({selectedValue: dateState}, ()=>{\n      this.props.updateParentSelectedFiltersCollection({value: this.state.selectedValue, type: \"filtervalue\"}, this.state.selectedFilter, this.props.keyme, true);\n    });\n  }\n\n  handleChangeEndDT = (date) => {\n    var dateState = this.state.selectedValue;\n\n    if(typeof dateState !== 'object') {\n      dateState = {from: moment().format('YYYY-MM-DD hh-mm-ss') , to: new Date()};\n    }\n\n    dateState.to = moment(date).format('YYYY-MM-DD hh-mm-ss');\n\n    this.setState({selectedValue: dateState}, ()=>{\n      this.props.updateParentSelectedFiltersCollection({value: this.state.selectedValue, type: \"filtervalue\"}, this.state.selectedFilter, this.props.keyme, true);\n    });\n  }\n\n  componentDidMount(){\n    var optionsOperator = this.props.optionsForOperator(this.state.selectedFilter);\n    this.setState({ optionsOperator: optionsOperator});\n  }\n\n  handleChangeOperator = (operator) => {\n    this.props.updateParentSelectedFiltersCollection({value: operator , type: \"operator\"}, this.state.selectedFilter,this.props.keyme);\n    this.setState({selectedOperator: operator });  \n  }\n\n  handleChangeFilter = (filter) => {\n    this.props.updateParentSelectedFiltersCollection({value: filter , type: \"entity\"}, this.state.selectedFilter,this.props.keyme);\n    this.setState({selectedFilter: filter});  \n }\n\n  handleChangeValue = (event) =>{\n    var value = event.currentTarget.value;\n      this.props.updateParentSelectedFiltersCollection({value: value , type: \"filtervalue\"}, this.state.selectedFilter, this.props.keyme);\n      this.setState({selectedValue: value}); \n  }\n\n  handleChangeValueCheckbox = (event) =>{\n    var value = event.currentTarget.checked;\n      this.props.updateParentSelectedFiltersCollection({value: value , type: \"filtervalue\"}, this.state.selectedFilter, this.props.keyme);\n      this.setState({selectedValue: value});  \n  }\n\n  handleChangeValueDate = (date) =>{\n    var value = moment(date).format('YYYY-MM-DD');\n      this.props.updateParentSelectedFiltersCollection({value: value , type: \"filtervalue\"}, this.state.selectedFilter, this.props.keyme);\n      this.setState({selectedValue: value});  \n  }\n\n  handleChangeValueDateDT = (date) =>{\n    var value = moment(date).format('YYYY-MM-DD hh-mm-ss');\n      this.props.updateParentSelectedFiltersCollection({value: value , type: \"filtervalue\"}, this.state.selectedFilter, this.props.keyme);\n      this.setState({selectedValue: value});  \n  }\n\n componentDidUpdate(prevProps, prevState) {\n      if(prevProps.selectedFilter !== this.props.selectedFilter){\n        this.setState({selectedFilter: this.props.selectedFilter , selectedOperator: this.props.selectedFilter.selectedOperator },function(){\n          var  optionsOperator = this.props.optionsForOperator(this.state.selectedFilter);\n\n          this.setState({optionsOperator: optionsOperator});\n        });\n      }\n }  \n\n \n getFilterValue = () => {\n    \n  let defaultValue = this.state.selectedValue, currentFilterState = this.state.selectedFilter, currentOperator = this.state.selectedOperator.value;\n\n  switch(currentFilterState.value.options.type){\n    case 'datetime':\n      var selectValueDT = moment(defaultValue).toDate();\n      if (currentOperator === \"/\") {\n        if(typeof this.state.selectedValue !== 'object'){\n          selectValueDT = {from: new Date() , to: new Date()};\n              return ( \n                <React.Fragment>  \n                  <DatePicker selected={ selectValueDT.from } selectsStart showTimeSelect className='date-picker-style'   dateFormat=\"yyyy/MMMM/d h:mm aa\" re onChange={ this.handleChangeStartDT } />\n                    {<span className='between'> {\" to \" }</span>}\n                  <DatePicker selected={ selectValueDT.to } selectsEnd showTimeSelect className='date-picker-style date-picker-style2'   dateFormat=\"yyyy/MMMM/d h:mm aa\"  onChange={ this.handleChangeEndDT } />\n              </React.Fragment> );\n         } else {\n          return ( \n            <React.Fragment>  \n              <DatePicker selected={ moment(this.state.selectedValue.from).toDate() } showTimeSelect selectsStart startDate={moment(this.state.selectedValue.from).toDate()}  endDate={moment(this.state.selectedValue.to).toDate()} className='date-picker-style'  dateFormat=\"yyyy/MMMM/d h:mm aa\" re onChange={ this.handleChangeStartDT } />\n                {<span className='between'> {\" to \" }</span>}\n              <DatePicker selected={moment(this.state.selectedValue.to).toDate() } showTimeSelect  selectsEnd startDate={moment(this.state.selectedValue.from).toDate()} endDate={moment(this.state.selectedValue.to).toDate()} className='date-picker-style date-picker-style2'   dateFormat=\"yyyy/MMMM/d h:mm aa\"  onChange={ this.handleChangeEndDT } />\n          </React.Fragment> ); \n         }\n        \n      } else {\n        return ( <DatePicker selected={ selectValueDT } showTimeSelect className='date-picker-style' dateFormat=\"yyyy/MMMM/d h:mm aa\"  onChange={ this.handleChangeValueDateDT } />);\n      }\n    case 'date':\n      var selectValue = moment(defaultValue).toDate();\n      if (currentOperator === \"/\") {\n        if(typeof this.state.selectedValue !== 'object'){\n          selectValue = {from: new Date() , to: new Date()};\n              return ( \n                <React.Fragment>  \n                  <DatePicker selected={ selectValue.from } selectsStart className='date-picker-style'   dateFormat=\"yyyy/MM/dd\" re onChange={ this.handleChangeStart } />\n                    {<span className='between'> {\" to \" }</span>}\n                  <DatePicker selected={ selectValue.to } selectsEnd className='date-picker-style date-picker-style2'   dateFormat=\"yyyy/MM/dd\"  onChange={ this.handleChangeEnd } />\n              </React.Fragment> );\n         } else {\n          return ( \n            <React.Fragment>  \n              <DatePicker selected={ moment(this.state.selectedValue.from).toDate() } selectsStart startDate={moment(this.state.selectedValue.from).toDate()}  endDate={moment(this.state.selectedValue.to).toDate()} className='date-picker-style'  dateFormat=\"yyyy/MM/dd\" re onChange={ this.handleChangeStart } />\n                {<span className='between'> {\" to \" }</span>}\n              <DatePicker selected={moment(this.state.selectedValue.to).toDate() } selectsEnd startDate={moment(this.state.selectedValue.from).toDate()} endDate={moment(this.state.selectedValue.to).toDate()} className='date-picker-style date-picker-style2'   dateFormat=\"yyyy/MM/dd\"  onChange={ this.handleChangeEnd } />\n          </React.Fragment> ); \n         }\n        \n      } else {\n        return ( <DatePicker selected={ selectValue } className='date-picker-style' dateFormat=\"yyyy/MM/dd\"  onChange={ this.handleChangeValueDate } />);\n      }\n    case 'boolean':\n      return (<Form.Check type=\"checkbox\" className='checkbox-style' checked={ defaultValue }  onChange={ this.handleChangeValueCheckbox } label=\"True/False\" />) \n    case 'string':\n    if (currentOperator === \"/\") {\n       if(typeof this.state.selectedValue !== 'object'){\n        defaultValue = {from: '' , to: ''};\n          return (\n            <React.Fragment> \n              <Form.Control className='value-container-style'  position={'first'} value={ defaultValue.from } onChange={this.handleChangeValueFromTo} type=\"text\" placeholder=\"Enter value from (string)...\" />\n                {<span className='between'> {\" to \" }</span>}\n              <Form.Control className='value-container-style value-container-style2' position={'second'}  value={ defaultValue.to } onChange={this.handleChangeValueFromTo} type=\"text\" placeholder=\"Enter value to (string)...\" />\n            </React.Fragment>);\n       } else {\n        return (\n          <React.Fragment> \n            <Form.Control className='value-container-style' position={'first'}  value={ defaultValue.from } onChange={this.handleChangeValueFromTo} type=\"text\" placeholder=\"Enter value from (string)...\" />\n              {<span className='between'> {\" to \" }</span>}\n            <Form.Control className='value-container-style value-container-style2' position={'second'}   value={ defaultValue.to } onChange={this.handleChangeValueFromTo} type=\"text\" placeholder=\"Enter value to (string)...\" />\n          </React.Fragment>);\n       }\n    } else {\n      return (<Form.Control className='value-container-style' value={ defaultValue } onChange={this.handleChangeValue} type=\"text\" placeholder=\"Enter value (string)...\" />);  \n    }   \n    case 'number':\n      if (currentOperator === \"/\") {\n       if(typeof this.state.selectedValue !== 'object'){\n         defaultValue = {from: '' , to: ''};\n          return (\n            <React.Fragment> \n              <Form.Control className='value-container-style' position={'first'}   value={ defaultValue.from } onChange={this.handleChangeValueFromTo} type=\"number\" placeholder=\"Enter value from (number)...\" />\n                {<span className='between'> {\" to \" }</span>}\n              <Form.Control className='value-container-style value-container-style2' position={'second'}   value={ defaultValue.to } onChange={this.handleChangeValueFromTo} type=\"number\" placeholder=\"Enter value to (number)...\" />\n            </React.Fragment>);\n         \n       } else {\n        return (\n          <React.Fragment> \n            <Form.Control className='value-container-style'  position={'first'}  value={ defaultValue.from } onChange={this.handleChangeValueFromTo} type=\"number\" placeholder=\"Enter value from (number)...\" />\n              {<span className='between'> {\" to \" }</span>}\n            <Form.Control className='value-container-style value-container-style2' position={'second'}  value={ defaultValue.to } onChange={this.handleChangeValueFromTo} type=\"number\" placeholder=\"Enter value to (number)...\" />\n          </React.Fragment>);\n       }\n      } else {\n        return (<Form.Control className='value-container-style' value={ defaultValue } onChange={this.handleChangeValue} type=\"number\" placeholder=\"Enter value type (number)...\" />);\n      }\n    \n    default:\n      return (<Form.Control className='value-container-style' value={ defaultValue } onChange={this.handleChangeValue} type=\"text\" placeholder=\"Enter value ...\" />);\n    }\n\n\n\n  \n} \n\n  render() {\n\n\n     return (\n     <React.Fragment>\n      \n      <div className='selectcontainer new-div'>\n      <Select className='beautify'\n        isSearchable isDisabled={ false } isClearable={false}\n        placeholder='Type to search ... '\n        value={this.state.selectedFilter}\n        onChange={this.handleChangeFilter}\n        options={this.props.optionsFilter}\n     />\n\n     {this.state.selectedFilter && <Select className='operators' isSearchable \n        placeholder='Operators'\n        value={this.state.selectedOperator}\n        onChange={this.handleChangeOperator}\n        options={this.state.optionsOperator}\n      />}\n\n      {this.state.selectedOperator && this.getFilterValue() }\n      <Button variant=\"outline-danger\" size=\"sm\"  className='x-button' value={this.props.keyme} onClick={ this.props.removeFilter }>X</Button>\n    </div>\n   </React.Fragment>);\n  } \n}\n\n\n\nclass SearchFilters extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      localfilters: [],\n      selectedFiltersQueryString: '',\n      collectionSelectedFilters: [],\n      loadedCategories: [],\n      categorySelected: this.props.category || false,  //required prop to work\n      globalfilters: false\n    };\n  }\n\n  \n\n  search = ()=>{\n    let theExpectedString = '', dataforqs = this.state.collectionSelectedFilters;\n\n      _.each(dataforqs,(elm,key)=>{\n\n        theExpectedString += 'filter=' + elm.value.filtername + '=' + (elm.selectedOperator.value || '');\n          if(typeof elm.selectedValue === 'object'){\n            theExpectedString += elm.selectedValue.from + '/' + elm.selectedValue.to + '&';\n          } else {\n            theExpectedString +=  (elm.selectedValue || '') + '&';\n          }\n      });\n \n      this.setState({selectedFiltersQueryString: theExpectedString});\n  }\n\n  getdatafromchild = (data)=>{\n    this.setState({collectionSelectedFilters: data});\n  }\n\n  componentDidMount() {\n    this.loadAllFilters();\n  }\n  \n  loadAllFilters = () => {\n\n      let allFiltersByCategory = filtersStateFromJson; // loaded valid filters from json file\n      \n      this.setState({ globalfilters: allFiltersByCategory }, ()=>{\n\n              if(this.props.category){\n                  let localfiltersarray = [];\n                  let localfilters = this.state.globalfilters[this.props.category];\n                  _.each(localfilters, (element, filter) => {\n                    localfiltersarray.push({filtername: filter, options: element});\n                  });                \n                this.setState({localfilters: localfiltersarray})\n              }\n      });  \n  }\n\n  render() {\n    return (\n      \n      <div className=\"main-container\">\n          <div className='header'> Search Filter TOCC Api v2 </div>\n          <SearchFilterParent getdatafromchild={this.getdatafromchild} category={this.props.category} globalfilters={this.state.localfilters} />\n          <Button variant=\"outline-primary\"  className='search-button' value={''} onClick={ this.search }>Initiate Search</Button>\n          <div className='final-string'>{this.state.selectedFiltersQueryString}<p> filter = name  = operator = value  </p></div>\n      </div>\n    );\n  }\n}\n\nSearchFilters.propTypes = {\n  category: PropTypes.string.isRequired\n}\n\n\nexport default SearchFilters;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.sass';\nimport SearchFilter from './SearchFilter.react';\nimport * as serviceWorker from './serviceWorker';\n\n/**\n * @prop category \n * @type string\n * You need to add a category to prop 'category' as a string \n * \n * possible values: 'actor' , 'actorpayment' , 'booking' , 'booking service' , 'contact', 'note',\n *                  'document', 'entity', 'property', 'sagepaypayment', 'specialoffer', 'ticket',\n *                  'transaction', 'workorder', 'workordersupplier';                  \n */\n\nReactDOM.render(<SearchFilter category='property' />, document.getElementById('root'));\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}